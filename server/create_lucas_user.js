const Database = require('better-sqlite3');
const path = require('path');

try {
  const dbPath = path.join(__dirname, 'database.sqlite');
  const db = new Database(dbPath);
  
  console.log('üë§ CRIANDO USU√ÅRIO LUCAS LEMES');
  console.log('='.repeat(40));
  
  // ID espec√≠fico do log de erro
  const lucasId = '3c26b970-4c26-4d26-8b6b-4b65269f9171';
  
  // Verificar se j√° existe
  const existingUser = db.prepare('SELECT id, name FROM users WHERE id = ?').get(lucasId);
  
  if (existingUser) {
    console.log('‚úÖ Usu√°rio j√° existe:');
    console.table([existingUser]);
  } else {
    console.log('üîß Criando usu√°rio Lucas Lemes...');
    
    const insertQuery = db.prepare(`
      INSERT INTO users (
        id, name, email, password_hash, role, status, 
        full_name, phone, cell_id, created_at, updated_at
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, datetime('now'), datetime('now'))
    `);
    
    try {
      const result = insertQuery.run(
        lucasId,                    // id
        'Lucas Lemes',              // name
        'lucas@igreja.com',         // email
        '$2b$10$hash123',           // password_hash (bcrypt format)
        'MEMBRO',                   // role
        'ACTIVE',                   // status
        'Lucas Lemes da Silva',     // full_name
        '(11) 99999-9999',         // phone
        null                        // cell_id
      );
      
      if (result.changes > 0) {
        console.log('‚úÖ Usu√°rio criado com sucesso!');
        
        // Verificar o usu√°rio criado
        const createdUser = db.prepare('SELECT id, name, email, role, status FROM users WHERE id = ?').get(lucasId);
        console.log('\nüìã Dados do usu√°rio criado:');
        console.table([createdUser]);
        
        console.log('\nüéØ SOLU√á√ÉO PARA O PROBLEMA:');
        console.log(`O usu√°rio com ID ${lucasId} agora existe no banco de dados.`);
        console.log('O erro "Usu√°rio n√£o encontrado ou inativo" deve ser resolvido.');
        
      } else {
        console.log('‚ùå Falha ao criar usu√°rio');
      }
      
    } catch (error) {
      console.log('‚ùå Erro ao inserir usu√°rio:', error.message);
    }
  }
  
  // Listar todos os usu√°rios ap√≥s a opera√ß√£o
  console.log('\nüë• Todos os usu√°rios no banco:');
  const allUsers = db.prepare('SELECT id, name, email, role, status FROM users ORDER BY name').all();
  console.table(allUsers);
  
  db.close();
  console.log('\n‚úÖ Opera√ß√£o conclu√≠da');
  
} catch (error) {
  console.error('‚ùå Erro geral:', error);
}