const bcrypt = require('bcryptjs');
const { v4: uuidv4 } = require('uuid');
const Database = require('better-sqlite3');
const path = require('path');

async function createTestUsers() {
  let db;
  try {
    console.log('üöÄ Criando usu√°rios de teste...');

    // Conectar ao banco SQLite
    const dbPath = path.join(__dirname, 'database.sqlite');
    db = new Database(dbPath);

    // Criar usu√°rio Lucas
    const lucasId = uuidv4();
    const lucasPassword = await bcrypt.hash('lucas123', 10);
    
    db.prepare(`
      INSERT INTO users (id, name, email, password_hash, role, created_at, updated_at)
      VALUES (?, ?, ?, ?, ?, datetime('now'), datetime('now'))
    `).run(lucasId, 'Lucas Lemes', 'lucas@igreja.com', lucasPassword, 'MEMBRO');

    console.log('‚úÖ Usu√°rio Lucas criado: lucas@igreja.com / lucas123');

    // Criar usu√°rio Igor
    const igorId = uuidv4();
    const igorPassword = await bcrypt.hash('igor123', 10);
    
    db.prepare(`
      INSERT INTO users (id, name, email, password_hash, role, created_at, updated_at)
      VALUES (?, ?, ?, ?, ?, datetime('now'), datetime('now'))
    `).run(igorId, 'Igor Silva', 'igor@igreja.com', igorPassword, 'LIDER');

    console.log('‚úÖ Usu√°rio Igor criado: igor@igreja.com / igor123');

    // Criar algumas c√©lulas de teste
    const celula1Id = uuidv4();
    const celula2Id = uuidv4();
    
    db.prepare(`
      INSERT INTO cells (id, name, created_at, updated_at)
      VALUES (?, ?, datetime('now'), datetime('now'))
    `).run(celula1Id, 'C√©lula 01');

    db.prepare(`
      INSERT INTO cells (id, name, created_at, updated_at)
      VALUES (?, ?, datetime('now'), datetime('now'))
    `).run(celula2Id, 'C√©lula 02');

    console.log('‚úÖ C√©lulas criadas: C√©lula 01, C√©lula 02');

    // Associar Lucas √† C√©lula 01
    db.prepare(`
      UPDATE users SET cell_id = ? WHERE id = ?
    `).run(celula1Id, lucasId);

    // Associar Igor √† C√©lula 02 como l√≠der
    db.prepare(`
      UPDATE users SET cell_id = ? WHERE id = ?
    `).run(celula2Id, igorId);

    console.log('‚úÖ Usu√°rios associados √†s c√©lulas');

    console.log('\nüìã Resumo dos usu√°rios criados:');
    console.log('üëë Admin: admin@igreja.com / admin123 (ADMIN)');
    console.log('üë§ Lucas: lucas@igreja.com / lucas123 (MEMBRO - C√©lula 01)');
    console.log('üëë Igor: igor@igreja.com / igor123 (LIDER - C√©lula 02)');

  } catch (error) {
    console.error('‚ùå Erro ao criar usu√°rios de teste:', error);
  } finally {
    if (db) {
      db.close();
    }
    process.exit(0);
  }
}

createTestUsers();